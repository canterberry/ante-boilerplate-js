defaults: &defaults
  working_directory: ~/project
  docker:
  - image: twuni/javascript:1.0.2

version: 2
jobs:
  greenkeeper_update:
    <<: *defaults
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Running Greenkeeper update hook
        command: |
          if [ -n "${GH_TOKEN}" ]; then
            node_modules/.bin/greenkeeper-lockfile-update
          else
            echo 'Missing authorization for GitHub; skipping Greenkeeper hook'
          fi
  greenkeeper_upload:
    <<: *defaults
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Running Greenkeeper upload hook
        command: |
          if [ -n "${GH_TOKEN}" ]; then
            node_modules/.bin/greenkeeper-lockfile-upload
          else
            echo 'Missing authorization for GitHub; skipping Greenkeeper hook'
          fi
  prepare:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-{{ checksum ".nvmrc" }}-yarn-lock-{{ checksum "yarn.lock" }}
    - run:
        name: Installing dependencies
        command: |
          yarn install --frozen-lockfile
    - save_cache:
        key: v1-{{ checksum ".nvmrc" }}-yarn-lock-{{ checksum "yarn.lock" }}
        paths:
        - node_modules
    - persist_to_workspace:
        root: .
        paths:
        - .
  build:
    <<: *defaults
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Building assets for production
        command: |
          NODE_ENV=production yarn build
    - store_artifacts:
        path: lib

  lint:
    <<: *defaults
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Checking code style
        command: |
          mkdir -vp reports/lint
          yarn lint --format junit --output-file reports/lint/report.xml
    - store_test_results:
        path: reports
  security:
    <<: *defaults
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Scanning dependencies for vulnerabilities
        command: |
          if [ -n "${SNYK_TOKEN}" ]; then
            yarn security
          else
            echo 'Missing authorization for snyk.io; skipping vulnerability scan'
          fi
  test:
    <<: *defaults
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Testing
        command: |
          mkdir -vp reports/test
          yarn --silent test --reporter xunit > reports/test/report.xml
    - store_test_results:
        path: reports
    - run:
        name: Generating code coverage report
        command: |
          yarn coverage --report-dir coverage
    - store_artifacts:
        path: coverage
  documentation:
    <<: *defaults
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Generate documentation
        command: |
          yarn documentation
    - store_artifacts:
        path: docs

workflows:
  version: 2
  default:
    jobs:
    - prepare
    - greenkeeper_update:
        requires:
        - prepare
    - greenkeeper_upload:
        requires:
        - test
    - build:
        requires:
        - prepare
    - lint:
        requires:
        - prepare
    - test:
        requires:
        - prepare
        - greenkeeper_update
    - documentation:
        requires:
        - prepare
    - security:
        requires:
        - prepare
